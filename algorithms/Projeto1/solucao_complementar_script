list = []
project = QgsProject.instance()
for layer in project.mapLayers().values():
    rect = layer.extent()

    polygon_geom = QgsGeometry.fromPolygonXY([[QgsPointXY(rect.xMinimum(),  rect.yMinimum()),
                                                QgsPointXY(rect.xMinimum(), rect.yMaximum()),
                                                QgsPointXY(rect.xMaximum(), rect.yMaximum()),
                                                QgsPointXY(rect.xMaximum(), rect.yMinimum()),
                                                QgsPointXY(rect.xMinimum(), rect.yMinimum())]]
                                                )
    new_layer = QgsVectorLayer("Polygon",f"{layer.name()}_BBox",'memory')
    new_layer.setCrs(layer.crs())

    fields = QgsFields()
    fields.append(QgsField('raster',QVariant.String))

    provider = new_layer.dataProvider()
    provider.addAttributes(fields)

    nome = layer.name()
    feature = QgsFeature(new_layer.fields())
    feature.setGeometry(polygon_geom)
    feature.setAttributes([nome])
    provider.addFeature(feature)

    new_layer.updateFields()
    list.append(new_layer)

list2 = list.copy()
list3 = []
project = QgsProject().instance()
for layer1 in list:
    list2.remove(layer1)
    for layer2 in list2:
        result = processing.run("qgis:intersection", {
        'INPUT': layer1,
        'OVERLAY': layer2,
        'OUTPUT': 'memory:'
       })
        intersect_layer = result['OUTPUT']
        if not intersect_layer.featureCount()==0:
            list3.append(intersect_layer)

result = []
for layer in list3:
    extent = layer.extent()

    resultado = processing.run("native:creategrid", {'TYPE':0,
    'EXTENT':extent,
    'HSPACING':200,
    'VSPACING':200,
    'HOVERLAY':0,
    'VOVERLAY':0,
    'CRS':QgsCoordinateReferenceSystem('EPSG:31982'),
    'OUTPUT':'TEMPORARY_OUTPUT'})

    result.append(resultado['OUTPUT'])

layer_cnt = 0
for intersect in list3:
    new_field = QgsField('Eqz',QVariant.Double)
    intersect_provider = intersect.dataProvider()
    intersect_provider.addAttributes([new_field])
    intersect.updateFields()
    erro = 0
    counter = 0
    layer_cnt = layer_cnt + 1
    intersect.startEditing()
    for feat in intersect.getFeatures():
        raster1 = project.mapLayersByName(feat.attributes()[0])[0]
        raster2 = project.mapLayersByName(feat.attributes()[1])[0]
        provider1 = raster1.dataProvider()
        provider2 = raster2.dataProvider()
        for layer_point in result:
            for point_feat in layer_point.getFeatures():
                if intersect.extent().contains(point_feat.geometry().boundingBox()):
                    geom = point_feat.geometry()
                    x,y = geom.asPoint()
                    point = QgsPointXY(x,y)
                    pixel_value1 = provider1.identify(point,QgsRaster.IdentifyFormatValue).results()[1]
                    pixel_value2 = provider2.identify(point,QgsRaster.IdentifyFormatValue).results()[1]
                    erro = abs(pixel_value1 - pixel_value2)
                    erro = erro + erro**2
                    counter = counter + 1
        EMQz = (erro/counter)**1/2
        feat[2] = EMQz
        intersect.updateFeature(feat)
    intersect.commitChanges()
    temp = intersect
    
    temp.setName(f"{feat.attributes()[0]}_{feat.attributes()[1]}")
    project.addMapLayer(temp)